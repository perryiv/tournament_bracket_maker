
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2017, Perry L Miller IV
//  All rights reserved.
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//
//  Binary tree module.
//
////////////////////////////////////////////////////////////////////////////////

"use strict";

var Functions = require ( "../../Util/Functions" );
var Node = require ( "./Node" );

var assert = require ( "assert" );
var lodash = require ( "lodash" );


////////////////////////////////////////////////////////////////////////////////
//
//  Binary tree class.
//
////////////////////////////////////////////////////////////////////////////////

var Tree = function ( depth )
{
  assert ( lodash.isSafeInteger ( depth ) );
  assert ( depth < 8 ); // A sane limit.

  var root = null;
  if ( depth >= 0 )
  {
    root = new Node ( null, depth );
  }

  this._id = Functions.getNextCounter();
  this._depth = depth;
  this._root = root;
};


////////////////////////////////////////////////////////////////////////////////
//
//  Clone the tree.
//
////////////////////////////////////////////////////////////////////////////////

Tree.prototype.clone = function()
{
  var tree = new Tree ( -1 );

  // tree._id = this._id;
  tree._depth = this._depth;

  var root = this._root;
  if ( root )
  {
    tree._root = root.clone();
  }

  return tree;
};


////////////////////////////////////////////////////////////////////////////////
//
//  The end of the module.
//
////////////////////////////////////////////////////////////////////////////////

module.exports =  Tree;
