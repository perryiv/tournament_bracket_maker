
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2017, Perry L Miller IV
//  All rights reserved.
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//
//  Misc functions.
//
////////////////////////////////////////////////////////////////////////////////

"use strict";

var Public = {};
var Private = {
  nextId: 0,
  renderKey: 0
};


////////////////////////////////////////////////////////////////////////////////
//
//  Return the next render counter.
//
////////////////////////////////////////////////////////////////////////////////

Public.getNextRenderCounter = function()
{
  return Private.renderKey++;
};


////////////////////////////////////////////////////////////////////////////////
//
//  Reset the render counter.
//
////////////////////////////////////////////////////////////////////////////////

Public.resetRenderCounter = function()
{
  return Private.renderKey = 0;
};


////////////////////////////////////////////////////////////////////////////////
//
//  Return the next counter.
//
////////////////////////////////////////////////////////////////////////////////

Public.getNextCounter = function()
{
  return Private.nextId++;
};


////////////////////////////////////////////////////////////////////////////////
//
//  Return the maximum depth.
//
////////////////////////////////////////////////////////////////////////////////

Public.getMaxDepth = function ( bracket )
{
  return Private.getMaxDepth ( bracket, 1 );
};


////////////////////////////////////////////////////////////////////////////////
//
//  Return the maximum depth.
//
////////////////////////////////////////////////////////////////////////////////

Private.getMaxDepth = function ( bracket, startingDepth )
{
  let maxDepth = startingDepth;

  let children = bracket.children;
  if ( children )
  {
    let depth = Private.getMaxDepth ( children[0], startingDepth + 1 );
    if ( depth > maxDepth )
    {
      maxDepth = depth;
    }

    depth = Private.getMaxDepth ( children[1], startingDepth + 1 );
    if ( depth > maxDepth )
    {
      maxDepth = depth;
    }
  }

  return maxDepth;
};


////////////////////////////////////////////////////////////////////////////////
//
//  The end of the module.
//
////////////////////////////////////////////////////////////////////////////////

module.exports = Public;
